datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id       Int         @id @default(autoincrement())
  email    String      @unique
  name     String?
  password String
  products Product[]
  orders   OrderItem[]
  rents    RentItem[]
}

model Product {
  id           Int               @id @default(autoincrement())
  title        String
  description  String?
  published    DateTime          @default(now())
  price        Float
  rent         Float
  ownerId      Int
  owner        User              @relation(fields: [ownerId], references: [id], onDelete: Cascade)
  orderItems   OrderItem[]
  rentItems    RentItem[]
  productViews ProductView[]
  categories   ProductCategory[]
}

model Category {
  id       Int               @id @default(autoincrement())
  name     String            @unique
  products ProductCategory[]
}

model OrderItem {
  id        Int     @id @default(autoincrement())
  quantity  Int
  productId Int
  userId    Int
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  user      User    @relation(fields: [userId], references: [id])
}

model RentItem {
  id        Int      @id @default(autoincrement())
  quantity  Int
  productId Int
  userId    Int
  startDate DateTime
  endDate   DateTime
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  user      User     @relation(fields: [userId], references: [id])
}

model ProductView {
  id        Int     @id @default(autoincrement())
  count     Int
  productId Int
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
}

model ProductCategory {
  productId  Int
  categoryId Int
  product    Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  category   Category @relation(fields: [categoryId], references: [id], onDelete: NoAction)

  @@id([productId, categoryId])
}
